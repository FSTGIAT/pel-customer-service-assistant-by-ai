from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from typing import List
import os
from datetime import datetime

router = APIRouter()

class LegacyTriggerRequest(BaseModel):
    customer_id: str  # Format: "3694388_07012024"

class BillingDocument(BaseModel):
    file_path: str
    date: datetime

@router.post("/legacy/trigger")
async def handle_legacy_trigger(request: LegacyTriggerRequest):
    try:
        # Split customer_id to get base number and date
        customer_base, date_str = request.customer_id.split('_')
        
        # Parse the date
        date = datetime.strptime(date_str, '%m%d%Y')
        
        # Directory where PDFs are stored
        pdf_directory = "/root/telecom-customer-service/pdf-test"  # Update this path
        
        # Get last 5 PDF files for this customer
        pdf_files = []
        try:
            # List all files in directory
            for file in os.listdir(pdf_directory):
                if file.startswith(customer_base) and file.endswith('.pdf'):
                    full_path = os.path.join(pdf_directory, file)
                    # Get file creation/modification time
                    file_time = os.path.getmtime(full_path)
                    pdf_files.append(BillingDocument(
                        file_path=full_path,
                        date=datetime.fromtimestamp(file_time)
                    ))
        except Exception as e:
            raise HTTPException(status_code=500, detail=f"Error accessing PDF directory: {str(e)}")
        
        # Sort by date descending and get last 5
        pdf_files.sort(key=lambda x: x.date, reverse=True)
        recent_pdfs = pdf_files[:5]
        
        if not recent_pdfs:
            raise HTTPException(status_code=404, detail=f"No PDF files found for customer {customer_base}")
            
        return {
            "customer_id": customer_base,
            "trigger_date": date,
            "pdf_files": recent_pdfs
        }
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
